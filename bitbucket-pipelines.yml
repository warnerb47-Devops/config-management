image: williamyeh/ansible:debian9

pipelines:
  default:
    - parallel:
      - step:
          name: 'Install Docker'
          script:
            - echo 'Install Docker'
            # - ansible-playbook -i config/hosts --private-key='/opt/atlassian/pipelines/agent/ssh/id_rsa' playbooks/docker.yml
      - step:
          name: 'Install Docker-compose'
          script:
            - echo 'Install Docker-compose'
            # - ansible-playbook -i config/hosts --private-key='/opt/atlassian/pipelines/agent/ssh/id_rsa' playbooks/compose.yml
      - step:
          name: 'setup swarm cluster'
          script:
            - echo 'setup swarm cluster'
            # - ansible-playbook -i config/hosts --private-key='/opt/atlassian/pipelines/agent/ssh/id_rsa' playbooks/cluster.yml
      - step:
          name: 'Deploy portainer'
          script:
            - echo 'Deploy portainer'
            # - ansible-playbook -i config/hosts --private-key='/opt/atlassian/pipelines/agent/ssh/id_rsa' playbooks/portainer.yml
      - step:
          name: 'setup aws credential'
          script:
            - echo 'setup aws credential'
            # - ansible-playbook -i config/hosts --private-key='/opt/atlassian/pipelines/agent/ssh/id_rsa' playbooks/aws.yml
      - step:
          name: 'setup ssl'
          script:
            - echo 'setup aws credential'
            # - ansible-playbook -i config/hosts --private-key='/opt/atlassian/pipelines/agent/ssh/id_rsa' playbooks/ssl/ssl.yml
      - step:
          name: 'setup prometheus-grafana'
          script:
            - echo 'setup prometheus-grafana'
            # - ansible-playbook -i config/hosts --private-key='/opt/atlassian/pipelines/agent/ssh/id_rsa' playbooks/prometheus/prometheus.yml

    # The following deployment steps will be executed for each pipeline run. To configure your steps and conditionally deploy see https://support.atlassian.com/bitbucket-cloud/docs/configure-bitbucket-pipelinesyml/
    - step:
        name: 'Deployment to Staging'
        deployment: staging
        trigger: manual
        script:
          - echo "Your deployment to staging script goes here..."
